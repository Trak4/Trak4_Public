{"version":3,"sources":["Device.tsx","loading.gif","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Device","props","useState","tableData","setTableData","selection","React","useMemo","Header","accessor","name","length","className","onChange","event","target","value","defaultValue","disabled","map","item","i","onClick","axios","post","commandstring","token","identifier","datetime_start","datetime_end","coredataonly","then","resp","a","console","log","data","isError","forEach","element","push","Date","receivedDate","Latitude","latitude","Longitude","longitude","Voltage","voltage1","alert","App","setData","isLoading","setLoading","deviceId","src","loading","style","marginLeft","width","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22cb76a2.chunk.js","sourcesContent":["import \"bootstrap/dist/css/bootstrap.css\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport React from \"react\";\r\n\r\ninterface DeviceProps {\r\n  name?: string[];\r\n}\r\n\r\ninterface TableData {\r\n  Date: string;\r\n  Latitude: number;\r\n  Longitude: number;\r\n  Voltage: number;\r\n}\r\n\r\nexport default function Device(props: DeviceProps) {\r\n  const [tableData, setTableData] = useState<TableData[]>([]);\r\n  const [isLoading, setLoading] = useState<boolean>(false);\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Date\",\r\n        accessor: \"date\",\r\n      },\r\n      {\r\n        Header: \"Latitude\",\r\n        accessor: \"latitude\",\r\n      },\r\n      {\r\n        Header: \"Longitude\",\r\n        accessor: \"longitude\",\r\n      },\r\n      {\r\n        Header: \"Voltage\",\r\n        accessor: \"voltage\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n  let selection = \"\";\r\n  const handleChange = (event: any) => {\r\n    selection = event.target.value;\r\n  };\r\n\r\n  const get2020Reports = () => {\r\n    if (selection != \"\") {\r\n      axios\r\n        .post<any>(\"https://gps.trak-4.com/api/v2/\", {\r\n          commandstring: \"get_reports_single_device\",\r\n          token: \"d1b95a4c22f546faa851a8961e0d20f9\",\r\n          identifier: selection,\r\n          datetime_start: \"01/01/2020 00:00:00\",\r\n          datetime_end: \"12/31/2020 00:00:00\",\r\n          coredataonly: true,\r\n        })\r\n        .then((resp) => {\r\n          let a: TableData[] = [];\r\n          console.log(resp.data);\r\n          if (!resp.data.isError) {\r\n            resp.data.data.forEach((element: any) => {\r\n              a.push({\r\n                Date: element.receivedDate,\r\n                Latitude: element.latitude,\r\n                Longitude: element.longitude,\r\n                Voltage: element.voltage1,\r\n              });\r\n            });\r\n          }\r\n          setTableData(a);\r\n        });\r\n    } else {\r\n      alert(\"Please Select Device....!\");\r\n      setTableData([]);\r\n    }\r\n  };\r\n\r\n  if (props.name?.length == 0) {\r\n    return <div></div>;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6\">\r\n            <select\r\n              className=\"form-control\"\r\n              onChange={handleChange}\r\n              defaultValue={\"default\"}\r\n            >\r\n              <option value=\"default\" disabled>\r\n                --Select Device--\r\n              </option>\r\n              {props.name?.map((item, i) => {\r\n                return (\r\n                  <option key={i} value={item}>\r\n                    Device#{item}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"col-sm-6\">\r\n            <button className=\"btn btn-primary\" onClick={get2020Reports}>\r\n              Load 2020 GPS Reports for\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <hr></hr>\r\n\r\n        {tableData.length != 0 ? (\r\n          <div className=\"row\">\r\n            <table className=\"table  table-striped\">\r\n              <thead className=\"thead-dark\">\r\n                <tr>\r\n                  <th>Date</th>\r\n                  <th>Latitude</th>\r\n                  <th>Longitude</th>\r\n                  <th>Voltage</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {tableData?.map((item, i) => {\r\n                  return (\r\n                    <tr key={i}>\r\n                      <td>{item.Date}</td>\r\n                      <td>{item.Latitude}</td>\r\n                      <td>{item.Longitude}</td>\r\n                      <td>{item.Voltage / 1000}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/loading.09569290.gif\";","import React, { constructor, useState } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./App.css\";\r\nimport Device from \"./Device\";\r\nimport loading from \"./loading.gif\";\r\n\r\nfunction App() {\r\n  let a: string[] = [];\r\n  const [data, setData] = useState<string[]>([]);\r\n  const [isLoading, setLoading] = useState<boolean>(false);\r\n  const fetchData = () => {\r\n    setLoading(true);\r\n    axios\r\n      .post<any>(\"https://gps.trak-4.com/api/v2/\", {\r\n        commandstring: \"get_devices\",\r\n        token: \"d1b95a4c22f546faa851a8961e0d20f9\",\r\n      })\r\n      .then((resp) => {\r\n        resp.data.data.forEach((element: any) => {\r\n          a.push(element.deviceId);\r\n        });\r\n        setData(a);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-2\">\r\n          <button className=\"btn btn-primary \" onClick={fetchData}>\r\n            Load Devices\r\n          </button>\r\n        </div>\r\n        <div className=\"col-sm-10\">\r\n          {isLoading ? (\r\n            <img\r\n              src={loading}\r\n              style={{ marginLeft: \"15%\" }}\r\n              width=\"100\"\r\n              height=\"100\"\r\n            />\r\n          ) : (\r\n            <Device name={data} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}